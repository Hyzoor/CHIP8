import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

public class Memory {

    private char[] memoryArray;

    public Memory() {
        this.memoryArray = new char[4096];
        initSprites();
    }

    public void write(char address, char b) {
        memoryArray[address] = b;
    }

    public char read(int address) {
        return memoryArray[address];
    }

    public void loadROM(Path romPath) {
        byte[] rom;

        try {
            rom = Files.readAllBytes(romPath);
            for (int i = 0; i < rom.length; i++) {
                memoryArray[i + 0x200] = (char) (rom[i] & 0xFF);
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    private void initSprites() {
        char[] sprites = {0xf0, 0x90, 0x90, 0x90, 0xf0, 0x20, 0x60, 0x20, 0x20, 0x70, 0xf0, 0x10, 0xf0, 0x80, 0xf0, 0xf0, 0x10, 0xf0, 0x10, 0xf0, 0x90, 0x90, 0xf0, 0x10, 0x10, 0xf0, 0x80, 0xf0, 0x10, 0xf0, 0xf0, 0x80, 0xf0, 0x90, 0xf0, 0xf0, 0x10, 0x20, 0x40, 0x40, 0xf0, 0x90, 0xf0, 0x90, 0xf0, 0xf0, 0x90, 0xf0, 0x10, 0xf0, 0xf0, 0x90, 0xf0, 0x90, 0xf0, 0xe0, 0x90, 0xe0, 0x90, 0xe0, 0xf0, 0x80, 0x80, 0x80, 0xf0, 0xe0, 0x90, 0x90, 0x90, 0xe0, 0xf0, 0x80, 0xf0, 0x80, 0xf0, 0xf0, 0x80, 0xf0, 0x80, 0x80};
        for (int i = 0; i < sprites.length; i++) {
            memoryArray[i] = sprites[i];
        }
    }

}
